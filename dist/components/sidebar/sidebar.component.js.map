{"version":3,"sources":["components/sidebar/sidebar.component.ts"],"names":[],"mappings":"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","file":"sidebar.component.js","sourcesContent":["import * as _ from 'lodash';\n\nimport {APIService} from '../../services/api';\nimport * as types from '../../types';\n// noinspection TypeScriptCheckImport\nimport {dirname} from 'decaf-common';\n\nimport './views/sidebar.component.css!';\n\ninterface SelectedItems {\n    experiment?: number;\n    sample?: number;\n    phase?: number;\n    method?: string;\n}\n\nconst component = angular.module('pathwayvis.components.sidebar', []);\n\n/**\n * sidebar component\n */\nclass SidebarComponentCtrl {\n    public shared: types.Shared;\n    public loadData: Object = {};\n    public selected: SelectedItems = {};\n    public methods: types.Method[];\n    public experiments: types.Experiment[];\n    public samples: types.Sample[];\n    public samplesSpecies: any;\n    public phases: types.Phase[];\n    public info: Object;\n\n    private _api: APIService;\n    private _http: angular.IHttpService;\n    private _q: angular.IQService;\n\n    /* @ngInject */\n    constructor ($scope: angular.IScope, $http: angular.IHttpService, $q: angular.IQService, api: APIService) {\n        this._api = api;\n        this._http = $http;\n        this._q = $q;\n\t\tthis.methods = [\n\t\t\t{'id': 'fba', 'name': 'FBA'},\n\t\t\t{'id': 'pfba', 'name': 'pFBA'},\n\t\t\t{'id': 'fva', 'name': 'FVA'},\n\t\t\t{'id': 'moma', 'name': 'MOMA'},\n\t\t\t{'id': 'lmoma', 'name': 'lMOMA'},\n\t\t\t{'id': 'room', 'name': 'ROOM'},\n\t\t];\n\t\tthis.selected.method = 'pfba';\n\n        this._api.get('experiments').then((response: any) => {\n            this.experiments = response.data;\n        });\n\n\t\tthis.samplesSpecies = {};\n\n        $scope.$watch('ctrl.selected.experiment', () => {\n            if (!_.isEmpty(this.selected.experiment)) {\n                this._api.get('experiments/:experimentId/samples', {\n                    experimentId: this.selected.experiment\n                }).then((response: any) => {\n                    this.samples = response.data;\n\t\t\t\t\tthis.samples.forEach((value) => {\n\t\t\t\t\t\tthis.samplesSpecies[value.id] = value.organism;\n\t\t\t\t\t})\n                });\n            }\n        });\n\n        $scope.$watch('ctrl.selected.sample', () => {\n            if (!_.isEmpty(this.selected.sample)) {\n                this._api.get('samples/:sampleId/phases', {\n                    sampleId: this.selected.sample\n                }).then((response: any) => {\n                    this.phases = response.data;\n                });\n            }\n        });\n    }\n\n    // Loads iJO1366 predefined map and model from API\n    public onLoadDataSubmit($event?): void {\n        const mapUris = {\n\t\t\t'ECO': `${dirname(module.id)}/assets/maps/iJO1366.Central metabolism.json`,\n\t\t\t'SCE': `${dirname(module.id)}/assets/maps/iMM904.Central carbon metabolism.json`,\n\t\t};\n        this.shared.loading++;\n\n        const mapPromise = this._http({\n\t\t\tmethod: 'GET',\n\t\t\turl: mapUris[this.samplesSpecies[this.selected.sample]]\n\t\t});\n        const modelPromise = this._api.get('samples/:sampleId/model', {\n            'sampleId': this.selected.sample,\n            'phase-id': this.selected.phase,\n\t\t\t'method': this.selected.method,\n            'with-fluxes': 1\n        });\n\n        const infoPromise = this._api.get('samples/:sampleId/info', {\n            'sampleId': this.selected.sample,\n            'phase-id': this.selected.phase,\n        });\n\n        this._q.all([mapPromise, modelPromise, infoPromise]).then((responses: any) => {\n\n            // Add loaded data to shared scope\n            this.shared.map.map = responses[0].data;\n            this.shared.map.model = {\n                id: responses[1].data['model-id'],\n                data: responses[1].data['model']\n            };\n\n            this.shared.map.reactionData = responses[1].data['fluxes'];\n            this.shared.loading--;\n\n            this.info = responses[2].data;\n        });\n    }\n}\n\nconst SidebarComponent: angular.IComponentOptions = {\n    controller: SidebarComponentCtrl,\n    controllerAs: 'ctrl',\n    templateUrl: `${dirname(module.id)}/views/sidebar.component.html`,\n    bindings: {\n        shared: '='\n    }\n}\n\n// Register component\ncomponent.component('pvSidebar', SidebarComponent);\n"]}